{
    "asyncapi": "2.2.0",
    "info": {
        "title": "Rust server",
        "description": "test",
        "version": "0.9.0",
        "license": {
            "name": "Apache 2.0",
            "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "servers": {
        "production": {
            "url": "148.251.43.103:4222",
            "protocol": "nats",
            "description": "GamingAPI NATS production broker"
        }
    },
    "defaultContentType": "application/json",
    "channels": {
        "v0/rust/servers/{server_id}/events/started": {
            "description": "Channel for the API to process for when a server has started",
            "parameters": {
                "server_id": {
                    "description": "The ID of the server",
                    "schema": {
                        "type": "string"
                    }
                }
            },
            "subscribe": {
                "operationId": "ServerStarted",
                "description": "The Rust server can publish to this channel when the server has started",
                "message": {
                    "name": "ServerStarted",
                    "payload": {
                        "$schema": "http://json-schema.org/draft-07/schema",
                        "type": "object",
                        "$id": "ServerStarted",
                        "required": ["timestamp"],
                        "properties": {
                            "timestamp": {
                                "type": "string",
                                "example": "2016-08-29T09:12:33.001Z"
                            }
                        }
                    },
                    "examples": [
                        {
                            "name": "laurent",
                            "summary": "Example for Laurent user",
                            "payload": {"timestamp": "2016-08-29T09:12:33.001Z"}
                        }
                    ],
                    "bindings": {
                        "nats": {
                            "bindingVersion": "0.1.0"
                        }
                    }
                },
                "bindings": {
                    "nats": {
                        "bindingVersion": "0.1.0"
                    }
                }
            },
            "bindings": {
                "nats": {
                    "bindingVersion": "0.1.0"
                }
            }
        },
        
        "v0/rust/servers/{server_id}/events/player/{steam_id}/chatted": {
            "description": "Event for when a player used the chat",
            "parameters": {
                "server_id": {
                    "description": "The ID of the server",
                    "schema": {
                        "type": "string"
                    }
                },
                "steam_id": {
                    "description": "The steam ID of a player",
                    "schema": {
                        "type": "string"
                    }
                }
            },
            "subscribe": {
                "description": "The Rust server can publish to this channel when a player uses the in-game chat",
                "operationId": "PlayerChatted",
                "message": {
                    "name": "PlayerChatted",
                    "payload": {
                        "$schema": "http://json-schema.org/draft-07/schema",
                        "type": "object",
                        "$id": "ChatMessage",
                        "required": ["steam_id", "player_name", "full_message", "is_admin", "timestamp"],
                        "properties": {
                            "steam_id": {
                                "type": "string",
                                "description": "The player's steamID64, must be 17 chars long.",
                                "pattern": "^[0-9]{17}$"
                            },
                            "player_name": {
                                "type": "string"
                            },
                            "raw_message": {
                                "type": "string",
                                "description": "The raw message before being converted with title and rank"
                            },
                            "full_message": {
                                "type": "string"
                            },
                            "is_admin": {
                                "type": "boolean"
                            },
                            "rank": {
                                "type": "integer"
                            },
                            "title": {
                                "type": "string"
                            },
                            "timestamp": {
                                "type": "string",
                                "example": "2016-08-29T09:12:33.001Z"
                            }
                        }
                    }
                }
            }
        },
        "v0/rust/servers/{server_id}/events/wiped": {
            "description": "Channel for the API to process when a server has just wiped",
            "parameters": {
                "server_id": {
                    "description": "The ID of the server",
                    "schema": {
                        "type": "string"
                    }
                }
            },
            "subscribe": {
                "operationId": "ServerWiped",
                "message": {
                    "name": "ServerWiped",
                    "payload": {
                        "type": "null"
                    }
                }
            }
        },
        "v0/rust/servers/{server_id}/players/{steam_id}/events/connected": {
            "description": "Channel for the API to process for when a player connects to a server",
            "parameters": {
                "server_id": {
                    "description": "The ID of the server",
                    "schema": {
                        "type": "string"
                    }
                },
                "steam_id": {
                    "description": "The steam ID of a player",
                    "schema": {
                        "type": "string"
                    }
                }
            },
            "subscribe": {
                "operationId": "ServerPlayerConnected",
                "message": {
                    "name": "ServerPlayerConnected",
                    "payload": {
                        "$schema": "http://json-schema.org/draft-07/schema",
                        "type": "object",
                        "$id": "ServerPlayerConnected",
                        "required": ["player", "connected_timestamp"],
                        "properties": {
                            "connected_timestamp": {
                                "type": "string",
                                "example": "2016-08-29T09:12:33.001Z"
                            },
                            "player": {
                                "$schema": "http://json-schema.org/draft-07/schema",
                                "type": "object",
                                "$id": "Player",
                                "required": ["id", "name", "address"],
                                "properties": {
                                    "id": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "address": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "v0/rust/servers/{server_id}/players/{steam_id}/events/disconnected": {
            "description": "Channel for the API to process for when a player disconnects from a server",
            "parameters": {
                "server_id": {
                    "description": "The ID of the server",
                    "schema": {
                        "type": "string"
                    }
                },
                "steam_id": {
                    "description": "The steam ID of a player",
                    "schema": {
                        "type": "string"
                    }
                }
            },
            "subscribe": {
                "operationId": "ServerPlayerDisconnected",
                "message": {
                    "name": "ServerPlayerDisconnected",
                    "payload": {
                        "$schema": "http://json-schema.org/draft-07/schema",
                        "type": "object",
                        "$id": "ServerPlayerDisconnected",
                        "required": ["player", "Reason", "disconnected_timestamp"],
                        "properties": {
                            "disconnected_timestamp": {
                                "type": "string",
                                "example": "2016-08-29T09:12:33.001Z"
                            },
                            "player": {
                                "type": "object",
                                "$id": "ServerPlayerDisconnectedPlayer",
                                "required": ["id"],
                                "properties": {
                                    "id": {
                                        "type": "string"
                                    }
                                }
                            },
                            "reason": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "v0/rust/servers/{server_id}/players/{steam_id}/events/gatheredResources": {
            "description": "Channel for the API to process for when a player gathers some resources",
            "parameters": {
                "server_id": {
                    "description": "The ID of the server",
                    "schema": {
                        "type": "string"
                    }
                },
                "steam_id": {
                    "description": "The steam ID of a player",
                    "schema": {
                        "type": "string"
                    }
                }
            },
            "subscribe": {
                "operationId": "ServerPlayerResourceGathered",
                "message": {
                    "name": "ServerPlayerResourceGathered",
                    "payload": {
                        "$schema": "http://json-schema.org/draft-07/schema",
                        "type": "object",
                        "$id": "ServerPlayerResourceGathered",
                        "required": ["steam_id", "item_uid", "item_id", "amount", "gathering_item", "gathered_timestamp"],
                        "properties": {
                            "gathered_timestamp": {
                                "type": "string",
                                "example": "2016-08-29T09:12:33.001Z"
                            },
                            "steam_id": {
                                "type": "string",
                                "description": "The player's steamID64, must be 17 chars long.",
                                "pattern": "^[0-9]{17}$"
                            },
                            "item_uid": {
                                "type": "integer"
                            },
                            "item_id": {
                                "type": "integer"
                            },
                            "amount": {
                                "type": "integer"
                            },
                            "gathering_item": {
                                "$schema": "http://json-schema.org/draft-07/schema",
                                "type": "object",
                                "$id": "ActiveItem",
                                "properties": {
                                    "uid": {
                                        "type": "integer"
                                    },
                                    "item_id": {
                                        "type": "integer"
                                    }
                                }
                            },
                            "gathering_position": {
                                "$schema": "http://json-schema.org/draft-07/schema",
                                "type": "object",
                                "$id": "PlayerPosition",
                                "required": ["x", "y", "z"],
                                "properties": {
                                    "x": {
                                        "type": "number"
                                    },
                                    "y": {
                                        "type": "number"
                                    },
                                    "z": {
                                        "type": "number"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "v0/rust/servers/{server_id}/players/{steam_id}/events/respawned": {
            "description": "Channel for the API to process for when a player respawn",
            "parameters": {
                "server_id": {
                    "description": "The ID of the server",
                    "schema": {
                        "type": "string"
                    }
                },
                "steam_id": {
                    "description": "The steam ID of a player",
                    "schema": {
                        "type": "string"
                    }
                }
            },
            "subscribe": {
                "operationId": "ServerPlayerRespawned",
                "message": {
                    "name": "ServerPlayerRespawned",
                    "payload": {
                        "$schema": "http://json-schema.org/draft-07/schema",
                        "type": "object",
                        "$id": "ServerPlayerRespawned",
                        "required": ["steam_id", "respawn_timestamp", "respawn_position"],
                        "properties": {
                            "steam_id": {
                                "type": "string",
                                "description": "The player's steamID64, must be 17 chars long.",
                                "pattern": "^[0-9]{17}$"
                            },
                            "respawn_timestamp": {
                                "type": "string",
                                "example": "2016-08-29T09:12:33.001Z"
                            },
                            "respawn_position": {
                                "$schema": "http://json-schema.org/draft-07/schema",
                                "type": "object",
                                "$id": "PlayerPosition",
                                "required": ["x", "y", "z"],
                                "properties": {
                                    "x": {
                                        "type": "number"
                                    },
                                    "y": {
                                        "type": "number"
                                    },
                                    "z": {
                                        "type": "number"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "v0/rust/servers/{server_id}/players/{steam_id}/events/combat/hit": {
            "description": "Channel for the API to process for when a player hits another player",
            "parameters": {
                "server_id": {
                    "description": "The ID of the server",
                    "schema": {
                        "type": "string"
                    }
                },
                "steam_id": {
                    "description": "The steam ID of a player",
                    "schema": {
                        "type": "string"
                    }
                }
            },
            "subscribe": {
                "operationId": "ServerPlayerCombatPlayerhit",
                "message": {
                    "name": "ServerPlayerCombatPlayerhit",
                    "payload": {
                        "$schema": "http://json-schema.org/draft-07/schema",
                        "type": "object",
                        "$id": "ServerPlayerCombatPlayerhit",
                        "required": ["hit_timestamp", "player_hit"],
                        "properties": {
                            "hit_timestamp": {
                                "type": "string",
                                "example": "2016-08-29T09:12:33.001Z"
                            },
                            "player_hit": {
                                "$schema": "http://json-schema.org/draft-07/schema",
                                "type": "object",
                                "$id": "PlayerOnPlayerHit",
                                "required": ["hit_area_id", "hit_distance", "hit_damage", "isKill", "victim", "attacker"],
                                "properties": {
                                    "hit_area_id": {
                                        "type": "integer"
                                    },
                                    "hit_distance": {
                                        "type": "number"
                                    },
                                    "hit_damage": {
                                        "type": "number"
                                    },
                                    "isKill": {
                                        "type": "boolean"
                                    },
                                    "victim": {
                                        "$schema": "http://json-schema.org/draft-07/schema",
                                        "type": "object",
                                        "$id": "PlayerHit",
                                        "required": ["steam_id", "position", "active_item"],
                                        "properties": {
                                            "steam_id": {
                                                "type": "string",
                                                "description": "The player's steamID64, must be 17 chars long.",
                                                "pattern": "^[0-9]{17}$"
                                            },
                                            "position": {
                                                "$schema": "http://json-schema.org/draft-07/schema",
                                                "type": "object",
                                                "$id": "PlayerPosition",
                                                "required": ["x", "y", "z"],
                                                "properties": {
                                                    "x": {
                                                        "type": "number"
                                                    },
                                                    "y": {
                                                        "type": "number"
                                                    },
                                                    "z": {
                                                        "type": "number"
                                                    }
                                                }
                                            },
                                            "active_item": {
                                                "$schema": "http://json-schema.org/draft-07/schema",
                                                "type": "object",
                                                "$id": "ActiveItem",
                                                "properties": {
                                                    "uid": {
                                                        "type": "integer"
                                                    },
                                                    "item_id": {
                                                        "type": "integer"
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "attacker": {
                                        "$schema": "http://json-schema.org/draft-07/schema",
                                        "type": "object",
                                        "$id": "PlayerHit",
                                        "required": ["steam_id", "position", "active_item"],
                                        "properties": {
                                            "steam_id": {
                                                "type": "string",
                                                "description": "The player's steamID64, must be 17 chars long.",
                                                "pattern": "^[0-9]{17}$"
                                            },
                                            "position": {
                                                "$schema": "http://json-schema.org/draft-07/schema",
                                                "type": "object",
                                                "$id": "PlayerPosition",
                                                "required": ["x", "y", "z"],
                                                "properties": {
                                                    "x": {
                                                        "type": "number"
                                                    },
                                                    "y": {
                                                        "type": "number"
                                                    },
                                                    "z": {
                                                        "type": "number"
                                                    }
                                                }
                                            },
                                            "active_item": {
                                                "$schema": "http://json-schema.org/draft-07/schema",
                                                "type": "object",
                                                "$id": "ActiveItem",
                                                "properties": {
                                                    "uid": {
                                                        "type": "integer"
                                                    },
                                                    "item_id": {
                                                        "type": "integer"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "v0/rust/servers/{server_id}/players/{steam_id}/events/items/{item_id}/pickup": {
            "description": "Channel for the API to process for when a player pickup items ingame",
            "parameters": {
                "server_id": {
                    "description": "The ID of the server",
                    "schema": {
                        "type": "string"
                    }
                },
                "steam_id": {
                    "description": "The steam ID of a player",
                    "schema": {
                        "type": "string"
                    }
                },
                "item_id": {
                    "description": "The ID of an item",
                    "schema": {
                        "type": "string"
                    }
                }
            },
            "subscribe": {
                "operationId": "ServerPlayerItemPickup",
                "message": {
                    "name": "ServerPlayerItemPickup",
                    "payload": {
                        "$schema": "http://json-schema.org/draft-07/schema",
                        "type": "object",
                        "$id": "ServerPlayerItemPickup",
                        "required": ["steam_id", "item_uid", "item_id", "pickup_timestamp"],
                        "properties": {
                            "pickup_timestamp": {
                                "type": "string",
                                "example": "2016-08-29T09:12:33.001Z"
                            },
                            "steam_id": {
                                "type": "string",
                                "description": "The player's steamID64, must be 17 chars long.",
                                "pattern": "^[0-9]{17}$"
                            },
                            "item_uid": {
                                "type": "integer"
                            },
                            "item_id": {
                                "type": "integer"
                            },
                            "amount": {
                                "type": "integer"
                            }
                        }
                    }
                }
            }
        },
        "v0/rust/servers/{server_id}/players/{steam_id}/events/items/{item_id}/loot": {
            "description": "Channel for the API to process for when a player loots an item ingame",
            "parameters": {
                "server_id": {
                    "description": "The ID of the server",
                    "schema": {
                        "type": "string"
                    }
                },
                "steam_id": {
                    "description": "The steam ID of a player",
                    "schema": {
                        "type": "string"
                    }
                },
                "item_id": {
                    "description": "The ID of an item",
                    "schema": {
                        "type": "string"
                    }
                }
            },
            "subscribe": {
                "operationId": "ServerPlayerItemLoot",
                "message": {
                    "name": "ServerPlayerItemLoot",
                    "payload": {
                        "$schema": "http://json-schema.org/draft-07/schema",
                        "type": "object",
                        "$id": "ServerPlayerItemLoot",
                        "required": ["steam_id", "item_uid", "item_id", "loot_timestamp", "amount", "container_uid", "container_prefab"],
                        "properties": {
                            "loot_timestamp": {
                                "type": "string",
                                "example": "2016-08-29T09:12:33.001Z"
                            },
                            "steam_id": {
                                "type": "string",
                                "description": "The player's steamID64, must be 17 chars long.",
                                "pattern": "^[0-9]{17}$"
                            },
                            "item_uid": {
                                "type": "integer"
                            },
                            "item_id": {
                                "type": "integer"
                            },
                            "container_uid": {
                                "type": "integer"
                            },
                            "container_prefab": {
                                "type": "string"
                            },
                            "container_position": {
                                "$schema": "http://json-schema.org/draft-07/schema",
                                "type": "object",
                                "$id": "PlayerPosition",
                                "required": ["x", "y", "z"],
                                "properties": {
                                    "x": {
                                        "type": "number"
                                    },
                                    "y": {
                                        "type": "number"
                                    },
                                    "z": {
                                        "type": "number"
                                    }
                                }
                            },
                            "amount": {
                                "type": "integer"
                            }
                        }
                    }
                }
            }
        },
        "v0/rust/servers/{server_id}/players/{steam_id}/events/items/{item_id}/crafted": {
            "description": "Channel for the API to process for when a player crafts items ingame",
            "parameters": {
                "server_id": {
                    "description": "The ID of the server",
                    "schema": {
                        "type": "string"
                    }
                },
                "steam_id": {
                    "description": "The steam ID of a player",
                    "schema": {
                        "type": "string"
                    }
                },
                "item_id": {
                    "description": "The ID of an item",
                    "schema": {
                        "type": "string"
                    }
                }
            },
            "subscribe": {
                "operationId": "ServerPlayerItemCrafted",
                "message": {
                    "name": "ServerPlayerItemCrafted",
                    "payload": {
                        "$schema": "http://json-schema.org/draft-07/schema",
                        "type": "object",
                        "$id": "ServerPlayerItemCrafted",
                        "required": ["steam_id", "item_uid", "item_id", "craft_timestamp", "amount"],
                        "properties": {
                            "craft_timestamp": {
                                "type": "string",
                                "example": "2016-08-29T09:12:33.001Z"
                            },
                            "steam_id": {
                                "type": "string",
                                "description": "The player's steamID64, must be 17 chars long.",
                                "pattern": "^[0-9]{17}$"
                            },
                            "item_uid": {
                                "type": "integer"
                            },
                            "item_id": {
                                "type": "integer"
                            },
                            "amount": {
                                "type": "integer"
                            }
                        }
                    }
                }
            }
        },
        "v0/rust/servers/{server_id}/events/command": {
            "description": "Channel for the API to process for when a server command is run",
            "parameters": {
                "server_id": {
                    "description": "The ID of the server",
                    "schema": {
                        "type": "string"
                    }
                }
            },
            "subscribe": {
                "operationId": "ServerCommand",
                "message": {
                    "name": "ServerCommand",
                    "payload": {
                        "$schema": "http://json-schema.org/draft-07/schema",
                        "type": "object",
                        "$id": "ServerCommand",
                        "required": ["timestamp"],
                        "properties": {
                            "command": {
                                "type": "string"
                            },
                            "arguments": {
                                "type": "string"
                            },
                            "steam_id": {
                                "type": "string",
                                "description": "The player's steamID64 which are running the command, must be 17 chars long.",
                                "pattern": "^[0-9]{17}$"
                            },
                            "timestamp": {
                                "type": "string",
                                "example": "2016-08-29T09:12:33.001Z"
                            }
                        }
                    }
                }
            }
        },
        "v0/rust/servers/{server_id}/players/{steam_id}/events/reported": {
            "description": "Channel for the API to process for when a player is reported",
            "parameters": {
                "server_id": {
                    "description": "The ID of the server",
                    "schema": {
                        "type": "string"
                    }
                },
                "steam_id": {
                    "description": "The steam ID of a player",
                    "schema": {
                        "type": "string"
                    }
                }
            },
            "subscribe": {
                "operationId": "ServerPlayerReported",
                "message": {
                    "name": "ServerPlayerReported",
                    "payload": {
                        "$schema": "http://json-schema.org/draft-07/schema",
                        "type": "object",
                        "$id": "ServerPlayerReported",
                        "required": ["reporter_steam_id", "reported_target_steam_id", "timestamp"],
                        "properties": {
                            "reporter_steam_id": {
                                "type": "string",
                                "description": "The player's steamID64 which reported the player, must be 17 chars long.",
                                "pattern": "^[0-9]{17}$"
                            },
                            "reported_target_steam_id": {
                                "type": "string",
                                "description": "The player's steamID64 which are reported, must be 17 chars long.",
                                "pattern": "^[0-9]{17}$"
                            },
                            "subject": {
                                "type": "string"
                            },
                            "message": {
                                "type": "string"
                            },
                            "reportedType": {
                                "type": "string"
                            },
                            "timestamp": {
                                "type": "string",
                                "example": "2016-08-29T09:12:33.001Z"
                            }
                        }
                    }
                }
            }
        },
        "v0/rust/servers/{server_id}/players/{steam_id}/events/unbanned": {
            "description": "Channel for notifying a server unbanned a player",
            "parameters": {
                "server_id": {
                    "description": "The ID of the server",
                    "schema": {
                        "type": "string"
                    }
                },
                "steam_id": {
                    "description": "The steam ID of a player",
                    "schema": {
                        "type": "string"
                    }
                }
            },
            "subscribe": {
                "operationId": "ServerPlayerUnbanned",
                "message": {
                    "name": "ServerPlayerUnbanned",
                    "payload": {
                        "$schema": "http://json-schema.org/draft-07/schema",
                        "type": "object",
                        "$id": "ServerPlayerUnbanned",
                        "required": ["steam_id", "timestamp"],
                        "properties": {
                            "steam_id": {
                                "type": "string",
                                "description": "The player's steamID64 which are unbanned, must be 17 chars long.",
                                "pattern": "^[0-9]{17}$"
                            },
                            "name": {
                                "type": "string"
                            },
                            "timestamp": {
                                "type": "string",
                                "example": "2016-08-29T09:12:33.001Z"
                            }
                        }
                    }
                }
            }
        },
        "v0/rust/servers/{server_id}/players/{steam_id}/events/banned": {
            "description": "Channel for notifying a server banned a player",
            "parameters": {
                "server_id": {
                    "description": "The ID of the server",
                    "schema": {
                        "type": "string"
                    }
                },
                "steam_id": {
                    "description": "The steam ID of a player",
                    "schema": {
                        "type": "string"
                    }
                }
            },
            "subscribe": {
                "operationId": "ServerPlayerBanned",
                "message": {
                    "name": "ServerPlayerBanned",
                    "payload": {
                        "$schema": "http://json-schema.org/draft-07/schema",
                        "type": "object",
                        "$id": "ServerPlayerBanned",
                        "required": ["player_name", "steam_id", "timestamp"],
                        "properties": {
                            "player_name": {
                                "type": "string"
                            },
                            "steam_id": {
                                "type": "string",
                                "description": "The player's steamID64, must be 17 chars long.",
                                "pattern": "^[0-9]{17}$"
                            },
                            "reason": {
                                "type": "string"
                            },
                            "duration": {
                                "type": "string"
                            },
                            "timestamp": {
                                "type": "string",
                                "example": "2016-08-29T09:12:33.001Z"
                            }
                        }
                    }
                }
            }
        }
    }
}